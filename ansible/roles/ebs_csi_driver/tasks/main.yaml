---
- name: Ensure that kubectl is installed
  command: "which kubectl"
  register: kubectl_check
  changed_when: False
  failed_when: kubectl_check.rc != 0

- name: Apply the EBS CSI Driver using kustomize from the GitHub repository
  command: >
    kubectl apply -k "github.com/kubernetes-sigs/aws-ebs-csi-driver/deploy/kubernetes/overlays/stable/?ref=master"
  register: kubectl_apply_output

- name: Check if EBS CSI driver was applied successfully
  command: "kubectl get pods -n kube-system -l app=ebs-csi-controller"
  register: ebs_driver_check
  until: ebs_driver_check.rc == 0
  retries: 5
  delay: 30

- name: Debug EBS CSI driver installation result
  debug:
    msg: "{{ kubectl_apply_output.stdout }}"

# Check if StorageClass already exists
- name: Check if StorageClass gp2 exists
  command: "kubectl get storageclass gp2"
  register: storageclass_check
  failed_when: storageclass_check.rc not in [0, 1]
  changed_when: False

- name: Create StorageClass if it does not exist
  template:
    src: storageclass.yaml.j2
    dest: /tmp/storageclass.yaml
  when: storageclass_check.rc == 1

- name: Apply StorageClass if it does not exist
  command: "kubectl apply -f /tmp/storageclass.yaml"
  when: storageclass_check.rc == 1

# Check if PersistentVolumeClaim already exists
- name: Check if PersistentVolumeClaim ebs-pvc exists
  command: "kubectl get pvc ebs-pvc"
  register: pvc_check
  failed_when: pvc_check.rc not in [0, 1]
  changed_when: False

- name: Create PersistentVolumeClaim if it does not exist
  template:
    src: persistentvolumeclaim.yaml.j2
    dest: /tmp/persistentvolumeclaim.yaml
  when: pvc_check.rc == 1

- name: Apply PersistentVolumeClaim if it does not exist
  command: "kubectl apply -f /tmp/persistentvolumeclaim.yaml"
  when: pvc_check.rc == 1

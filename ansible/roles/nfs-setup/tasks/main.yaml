- name: Update apt package list
  apt:
    update_cache: yes

- name: Install nfs-common package
  apt:
    name: nfs-common
    state: present

- name: Ensure mount directory exists
  ansible.builtin.file:
    path: /mnt/myshare
    state: directory

# Manually mount the NFS share
- name: Mount NFS share manually
  ansible.builtin.mount:
    path: /mnt/myshare
    src: "10.200.1.12:/mnt/myshare"
    fstype: nfs
    opts: rw,sync,no_subtree_check
    state: mounted

# Make the NFS mount persistent across reboots
- name: Ensure NFS mount is persistent across reboots
  ansible.builtin.mount:
    path: /mnt/myshare
    src: "10.200.1.12:/mnt/myshare"
    fstype: nfs
    opts: rw,sync,no_subtree_check
    state: present

- name: Add Helm repository for NFS Subdir External Provisioner
  shell: "helm repo add nfs-subdir-external-provisioner {{ helm_repo_url }}"
  args:
    creates: /etc/helm/repositories.yaml

- name: Install NFS Subdir External Provisioner using Helm
  shell: |
    helm install nfs-subdir-external-provisioner \
    nfs-subdir-external-provisioner/nfs-subdir-external-provisioner \
    --set nfs.server={{ nfs_ip }} \
    --set nfs.path={{ nfs_path }} \
    --set storageClass.onDelete={{ storage_class_delete_behavior | lower }}
  args:
    chdir: /tmp

- name: Check storage class status
  shell: kubectl get storageclass {{ storage_class_name }}
  register: storageclass_output

- name: Patch Kubernetes StorageClass
  shell: |
    kubectl patch storageclass {{ storage_class_name }} \
    --type='merge' \
    -p '{"metadata": {"annotations": {"storageclass.kubernetes.io/is-default-class": "true"}}}'
  register: patch_output
  ignore_errors: yes  # Optional: ignore errors if the patch fails

- name: Display storage class status
  debug:
    msg: "{{ storageclass_output.stdout }}"
